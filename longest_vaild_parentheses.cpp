//
// Created by blazeq on 2017. 11. 14..
//

#include "catch.hpp"
#include <iostream>
#include <stack>

namespace {

using namespace std;

void solve(const string& s) {
    int maxLength = 0;

    stack<int> st;
    st.push(-1); // bottom

    for (int i = 0; i < s.length(); ++i) {
        if (s[i] == '(') {
            st.push(i);
        } else if (s[i] == ')') {
            st.pop();

            if (st.empty()) {
                st.push(i); // 바닥을 깔아준다.
            }

            maxLength = max(maxLength, i - st.top());
        }
    }

    cout << maxLength << endl;
}

void test(istream& in) {
    int testCount = 0;
    in >> testCount;

    for (int i = 0; i < testCount; ++i) {
        string s;
        in >> s;
        solve(s);
    }
}

TEST_CASE("Longest valid parentheses", "[longest valid parentheses]") {
    stringstream s;
    s << 1 << endl
      //<< string("))))()))()))))(())())())())))))))()(()(()(()()(((((()((()())())(())()()))()()()()()((()())()((()()((((()(((()))(()))()((()()(())()()()))()())((((())(()))()()()((())))(())())))(())(()((()()((())()))()))(())((((())())()((())())(()(()()(())))()))())))(((())())))(())))())())(()(()()((()()(())((((((()))())(())()((())(()))))(()()())())))(()()))((())))(((())(((()())()())(())))(())()()()()))(())(()))))())())(()()()())))))((()())())(()(()))()()((()(())()()))))())))()(()(())()()))()))))())()))())))(()))()(((((()()()))))(()()(()()()))()()((((()())()(()))()(())(())(()(()))((())(())))))))(())))))()()(())))()))()(((()()())()))())))(((((()((()()()(((((()))))())(()))((()))()((())(())())()()((()(()()(()()))(()())()((())))((((()()))()(()()()())()()(()(((())))())(())))))()(()))((()(((()(()(()()((((((()())(()))()()()))))(())((()))(())))(()(()()))(()((())((())))((()((())(())))(((()(()()()(()(())(())))(())()())))(()))))((())((()())(()(((())(()))())((()))((()()))()))((()((()((()))(()((()))())(()(()(()))()()(()()))(((()(())))))()())()()))(()())(())())))))))))(()((((((())(()))))(()(()(((()()(()))((()))(()())(((()))()()))(((()))(()(((()(())))))))()(()()))())(()(((()()())())()))(((())(((((((())(())(()))))(((()))(()()))(((((()(()))())((()))))()((((((()())))())()()((()((()())((()()((((()()))))()()()))()(()))(((()(())((((((((((()(())(((()()(()()(())((()))((((())())((((())))()(()()))))))))(()(((())((((((()()()(()())())(()))(()((()()()(()(())))())))()(()))()()(((()))()())(())()))()())()((()))(()(()())(((((())(()))()))()))))(((((((()(()))))((((()())()(()()()()(()))())()()()(()(())(((()((((())()))))()(()(((())))((()))(((((())(()))(()((())())(())())(()))())(((())))(((())()())(()()(())(()))(()(())((((()()))())()))()())()))(()()((()))(()()))(())))())())(()(()))())()()())((((((((())))(()())()))(())(())()()(()))))))))(()()(())())))()(()()(((((())()()))(()((())()()())))()()(()()))((())(())()(((()(((()((())())))((((()(())()))()((((()))())())()((()()))(()()((()())()))))(()((()))(()()((((()(((((())())((())))()())()))(((()(()))))()()))))))(()(((((()(()()(()((()))())())))()(((())(((((()))()())(()())())()))(())))()(()(()())(((()()()))))))(())(())))(()(()))())())())(((())()(()((()((()))(()())(())((())()))((())(((()((((()(()(())(()())()()()))()((()))(())(()((()()))()()(()(()())(()())(((())))))))))()(()))(()(((()()()(())()))))))()())))((()))))))))(((()(())())())(()))((()(()(()))(()))())((()((()((()))))((()(()())(()((())()())))(()(())))))((()()((()))(())))())))((())()))(()((()))()())()())()()))))(()()()()())((()(()))))((()(()()(())))()(()()(()(()())(()()((()())())))()))))))(())((()())))()(())())())))())(())(((())())()()(()()())())))()(()()())(((((()()))()()))))(((())((()(((()))((()(((()((()()((((()())))(()(())()()()((()(()))(((())(())))()))()(()))(())))))(())))(()(()(((()())())))())()(()(()(((())(()))))()((()()))((()())((())()(())(())(())(())()()))))(((((((())(((())))()(()(((()()))()((())()()()))))())))()())))))))((()()))())()))(()(((((((()))))(()())))())())(((()()))((((((()())))))))))()()()()(()()(()()((()())()(((()())(((())()()(((())()((((()))(())(((()(((()()(())(()()()(())(()((())((()()((()(()))()(()(())()()(()))()((((())))()(())((((()()))())())(()))))()(((((())))((((())))))((((()((((())))())())))()))))))((())((()))())(((((((((((((()((()()))((()))))()()(()))()))()(((()(()()(()((()()()((())())))((()((())((()()(()())((((()(((()))))(()((()()())(()())(((()()((())((((())((()(((((((()(((())((((())((((((()()(((()()))((((()()()))((((())())(())(()(()))()()))(())))(()(()))()))()())))))()))(())))(((()(()(()()(()(()(())()(()(((()))(((()))))(()))))())))(((()))()))((()(()()(((((())())))(()((((((()((()()()()((((()(()(()))(()(((())()(((((()))(()))()(()))()()(()()()()())()))(())))(()(()(()))(())(())))()(())))))(((()()(((())())(()(()()(()(())((())))(((()))))(())())()()(()()))))))()))))()))))(((()()))(()(()((())()(())())()()()()((())()((())(((())())()()))()()()()()))((()()())))))()(()((()()())))))()(((((((((((()))))(()))())()())((()()()(())))())())())(())(()())()(()((((((()()(()()))())))())((())((()((()())())))))(()((((())))(())((()((())())(())))(()())((())(())))((((())(((((()()))))((()))())())()())()))(((()(())))(()()(())))())))()))()(()()(()())()))())(()(())))))()))((())(()())())))(()())())(())()()(()())))())()))((((()()))))()(())(())()(())()))()(()(()(()((()(())())(((((()((((()))()()()))(()()(()()()())))))())())))(()))))()())))((()(()((()()))))((((((()(()(()))())()()(()(()))((((())((())())()((((((()())())()()(())))))(())(())((()(()()(((()()())()((())((((()))))((())((((((((()()))))(((())(()()(()()))((())(((((()()()())((()()())())(()((()))(())()(()()()))())(()()(()))))()(()((()(())()())(())()()))(())()(((((())(((()))(()())(((())()((()))(((())())()())(()))(()())))(())))())(()()))))((((())()(()((((()()))(())(()(()()()())(((())(((((((())()()())(()))()))(()()((())((((()))(()())())(()()(()()(()()()())()()())()((()()))))))((()()))(()()))(((())))())))()()()())()())(((())(()(()(()()((())(()())((()))()))())))(())()())((((((())))))()))())()(((()()((()))(((())())(((()(()))(((()()()(()))())((()))(())))))((((()()))()())()()(((()))(()(()((()()()()))))(()()()))()()))()()()))()(()()()(((())()(((())))(()(())(()())))((())()))()(()))(()())(((()(((()))())(())())()))()(()()())))(())(()()()())(()()((()()))())()(())())()))))())))(((())()(())(((()))))))))))))))()))))((()(()()((((((((()(()()())())((()(((()((()))()(())))()(())((())((()(())))))))(()((()))()()()))))()(()(((()()())((((()()(((()(()()()))(((()(())))(((()())()))()(((()((())))())()(()((((()((((()))))(())())()))(((()()))(()))()())(((((((())()(())(()(((((((())())))()((((((())()())()))((()()())))()()()()(()(()()(()((()(()(()(()()))))(((()(()()((())))()()()(((((((()(()()((()()(()(())))()))((((((())(()(((()()(()(()()())((()))())(()()()((())()())()(()))))())((()((()()(()())()))((((((())))((()))())((())()(((())))))())()))()))()))(()))((()())())(())())())))())()())((()())()))())(((()(()()(()())((()()()(()())))((())()((()())((())))()))(()(()())()((()(()(((())(())())))))((()()))()))())()(())))))())()))(())(()(((()(((()((") << endl;
      << "))()))()()" << endl;
    test(s);
}

} // namespace